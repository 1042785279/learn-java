1.系统简介
（1）系统功能
      本程序实现了出租车调度的功能以及出租车运行的模拟。
（2）性能要求
      指令在300行以内；
（2） 约束条件
      请求按照指导书输入例如：[CR,(11,22),(3,4)]
      CR需大写，不支持先导正号。
      输出：输出保存在项目目录下的output.txt中
      请求输出格式
      1524647360937 request:(11,22)to(3,4)
      时间窗内响应车辆输出格式
      num.13(49,34)state:2credit:1
      接单时刻与途径节点输出格式
      1524647370575:num.13(49,33)
      到达接客点输出格式：
      1524647372858:arrive at(51,32)
注：state代表状态服务状态 -0  接单状态 -1 等待状态 -2 停止状态 -3 
credit代表信用。
输出因为是严格按照真实时间输出所以会有些乱（不好意思）但是我在路径节点前都加了出租车编号，所以应该还是能看懂的。（拜托了！！）
同质请求输出“Same”
接口：接口定义在main类中分别为get_im查询信息和get_taxi根据状态查询出租车编号。输出是命令行输出。
运行中会有红字，这是gui的问题，不影响程序进行，所以不用在意。
特别注意：
     初始化指令
     Load,"文件路径"
    （必须一开始输入Load指令程序才能正常运行）
     例如
     Load,E:\\test.txt
     （L大写，要紧跟逗号，不能有空格）
     文件格式
     例如
#No 9 Test File#

#map
E:\map.txt
#end_map
#light
E:\light.txt
#light_end
#flow
(1,0)(1,1)1
#end_flow

#taxi
1,2,0,(0,0)
2,2,0,(0,1)
3,2,0,(0,2)
#end_taxi

#request
[CR,(11,22),(3,4)]
[CR,(11,22),(3,4)]
#end_request

(taxi中各项要加逗号，request中两点间要加逗号，以上指令内均无空格，若taxi初始状态不为2，则原地停留一秒后转变为2状态)
新增通短路指令（将请求指令的CR，替换为OPEN，CLOSE）
例如
[OPEN,(0,0),(1,0)]
新增的红绿灯文件可以将所有的点都设置为1，程序会自主判断该节点能否设置红绿灯，若不能会输出错误信息。
新增可追踪车辆接口:
     在test类的run函数中已给出测试样例用next函数获取队列中的第一条信息，用pre获取最后一条信息，获取后删除本条信息，且只有被派单的车辆会记录信息。（注：在进行测试时请估算运行所需时间，须确保sleep的时间大于运行时间才能输出想要的信息，出租车编号应在0-29之间）输出的信息保存在项目文件夹下的detail.txt中。
    对LSP的理解：
子类必须完全实现父类的方法
子类可以有自己的个性
覆盖或实现父类的方法时输入参数可以被放大
覆盖或实现父类的方法时输出结果可以被缩小
